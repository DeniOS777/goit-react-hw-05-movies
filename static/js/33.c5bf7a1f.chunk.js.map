{"version":3,"file":"static/js/33.c5bf7a1f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: 16px;\n  padding-right: 16px;\n\n  *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  margin-bottom: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  font-weight: 500;\n  color: #f15c27;\n  border: 1px solid #f15c27;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border-top-left-radius: 16px;\n  border-bottom-left-radius: 16px;\n  text-decoration: none;\n  transition: background-color 250ms ease-in-out, color 250ms ease-in-out;\n\n  &:hover {\n    color: #fff;\n    background-color: #f15c27;\n  }\n`;\n\nexport const MyLink = styled(Link)`\n  text-decoration: underline;\n  color: #1f36ee;\n\n  &:visited {\n    color: #6927a8;\n  }\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #f15c27;\n  }\n`;\n\nexport const Item = styled.li`\n  font-weight: 500;\n\n  &:not(:last-child) {\n    margin-bottom: 3px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 35px;\n  font-size: 28px;\n  font-weight: 600;\n`;\n\nexport const TitleUserRate = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  letter-spacing: 0.02em;\n  margin-bottom: 25px;\n`;\n\nexport const TitleOverview = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  letter-spacing: 0.02em;\n  margin-bottom: 15px;\n`;\n\nexport const TextOverview = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const TitleGenres = styled.h3`\n  font-size: 18px;\n  font-weight: 700;\n  letter-spacing: 0.02em;\n\n  margin-bottom: 15px;\n`;\n\nexport const TextGenres = styled.p`\n  letter-spacing: 0.02em;\n`;\n\nexport const ImageWrap = styled.div`\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const DescriptionMovie = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n\nexport const CardMovie = styled.div`\n  display: grid;\n  grid-template-columns: 320px 1fr;\n  grid-gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const WrappInfo = styled.div`\n  margin-bottom: 15px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  border-top: 2px solid #ccc;\n  border-bottom: 2px solid #ccc;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getInfoOfMovieById } from 'services/api';\nimport dummyPoster from './dummyPoster.jpg';\nimport { Box } from '../../components/Box';\nimport Loader from '../../components/Loader';\nimport {\n  StyledLink,\n  Container,\n  MyLink,\n  Item,\n  Title,\n  TitleUserRate,\n  TitleOverview,\n  TextOverview,\n  TitleGenres,\n  TextGenres,\n  ImageWrap,\n  DescriptionMovie,\n  CardMovie,\n  Text,\n  WrappInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getInfoOfMovieById(movieId)\n      .then(movie => setMovie(movie))\n      .catch(error => toast.error(error.message));\n  }, [movieId]);\n\n  if (!movie) return;\n\n  console.log(movie);\n  const { vote_average, poster_path, title, release_date, overview, genres } =\n    movie;\n\n  const backLinkHref = location.state?.from ?? '/';\n  const userScorePersentage = Number(((vote_average / 10) * 100).toFixed());\n  const releaseDate = release_date.slice(0, 4);\n  const parseGenres = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <main>\n      <Container>\n        <StyledLink to={backLinkHref}>Go back</StyledLink>\n\n        <CardMovie>\n          <ImageWrap>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w342${poster_path}`\n                  : dummyPoster\n              }\n              alt={title}\n            />\n          </ImageWrap>\n          <DescriptionMovie>\n            <Title>{`${title} (${releaseDate})`}</Title>\n            <TitleUserRate>\n              User Score: {userScorePersentage || 'ü§∑‚Äç‚ôÇÔ∏è'}%\n            </TitleUserRate>\n            <TitleOverview>Overview:</TitleOverview>\n            <TextOverview>{overview}</TextOverview>\n            <TitleGenres>Genres: </TitleGenres>\n            <TextGenres>{parseGenres}</TextGenres>\n          </DescriptionMovie>\n        </CardMovie>\n\n        <WrappInfo>\n          <Text>Additional information</Text>\n          <Box as=\"ul\" pl={4}>\n            <Item>\n              <MyLink to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n                Cast\n              </MyLink>\n            </Item>\n            <Item>\n              <MyLink\n                to=\"reviews\"\n                state={{ from: location.state?.from ?? '/' }}\n              >\n                Reviews\n              </MyLink>\n            </Item>\n          </Box>\n        </WrappInfo>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'fac524451816d908f081cf899bfc32e2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMoviesDay = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getInfoOfMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getCreditsOfMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.cast;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getReviewsOfMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getMoviesBySearchQuery = async searchQuery => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n"],"names":["Container","styled","StyledLink","Link","MyLink","Item","Title","TitleUserRate","TitleOverview","TextOverview","TitleGenres","TextGenres","ImageWrap","DescriptionMovie","CardMovie","Text","WrappInfo","location","useLocation","movieId","useParams","useState","movie","setMovie","useEffect","getInfoOfMovieById","then","catch","error","toast","message","console","log","vote_average","poster_path","title","release_date","overview","genres","backLinkHref","state","from","userScorePersentage","Number","toFixed","releaseDate","slice","parseGenres","map","genre","name","join","to","src","dummyPoster","alt","Box","as","pl","Suspense","fallback","Loader","API_KEY","BASE_URL","getTrendingMoviesDay","fetch","response","ok","json","data","results","Promise","reject","Error","status","getCreditsOfMovieById","cast","getReviewsOfMovieById","getMoviesBySearchQuery","searchQuery"],"sourceRoot":""}