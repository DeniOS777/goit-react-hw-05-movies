{"version":3,"file":"static/js/180.d3458fc6.chunk.js","mappings":"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","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-flex;\n  grid-gap: ${p => p.theme.space[3]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  width: 400px;\n`;\n\nexport const Input = styled.input`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  width: 100%;\n  border: ${p => p.theme.borders.middle} ${p => p.theme.colors.grey};\n  border-radius: ${p => p.theme.radii.sm};\n\n  &:focus {\n    outline: none;\n    border: ${p => p.theme.borders.middle} ${p => p.theme.colors.lightBlue};\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  font-weight: ${p => p.theme.fontWeights.middle};\n  color: ${p => p.theme.colors.orange};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.orange};\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.sm};\n  transition: background-color 250ms ease-in-out, color 250ms ease-in-out;\n\n  &:hover {\n    background-color: ${p => p.theme.colors.orange};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Form, Input, SearchButton } from './SearchBox.styled';\n\nconst SearchBox = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n\n    if (form.elements.search.value.trim() === '') {\n      onSubmit(form.elements.search.value);\n      return toast.info('Search field is empty');\n    }\n    onSubmit(form.elements.search.value);\n    form.reset();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Input type=\"text\" name=\"search\" placeholder=\"Enter name film...\" />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </Form>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n\n  *:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: underline;\n  color: ${p => p.theme.colors.blue};\n\n  &:visited {\n    color: ${p => p.theme.colors.violet};\n  }\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: ${p => p.theme.colors.orange};\n  }\n`;\n\nexport const MovieItem = styled.li`\n  font-weight: ${p => p.theme.fontWeights.middle};\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[2]}px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getMoviesBySearchQuery } from 'services/api';\nimport SearchBox from '../../components/SearchBox';\nimport { Box } from '../../components/Box';\nimport { Container, StyledLink, MovieItem } from './Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParam = searchParams.get('query') ?? '';\n  console.log(queryParam);\n\n  const updateSearchQuery = query => {\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  useEffect(() => {\n    if (!queryParam) return setMovies([]);\n\n    getMoviesBySearchQuery(queryParam)\n      .then(movies => {\n        if (movies.length === 0) {\n          setMovies([]);\n          return toast.warning(\n            'This movie was not found, please try to enter another of keyword '\n          );\n        }\n        setMovies(movies);\n      })\n      .catch(error => toast.error(error.message));\n  }, [queryParam]);\n\n  console.log(movies);\n\n  return (\n    <main>\n      <Container>\n        <SearchBox onSubmit={updateSearchQuery} />\n\n        {movies.length > 0 && (\n          <Box as=\"ul\">\n            {movies.map(({ id, original_title, title }) => (\n              <MovieItem key={id}>\n                <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                  {original_title || title}\n                </StyledLink>\n              </MovieItem>\n            ))}\n          </Box>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Movies;\n","const API_KEY = 'fac524451816d908f081cf899bfc32e2';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMoviesDay = async () => {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getInfoOfMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getCreditsOfMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.cast;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getReviewsOfMovieById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n\nexport const getMoviesBySearchQuery = async searchQuery => {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  return Promise.reject(\n    new Error(`Server responsed with status code: ${response.status}`)\n  );\n};\n"],"names":["Form","styled","p","theme","space","Input","borders","middle","colors","grey","radii","sm","lightBlue","SearchButton","fontWeights","orange","normal","white","onSubmit","autoComplete","e","preventDefault","form","target","elements","search","value","trim","toast","reset","type","name","placeholder","Container","StyledLink","Link","blue","violet","MovieItem","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryParam","get","console","log","useEffect","getMoviesBySearchQuery","then","length","catch","error","message","query","Box","as","map","id","original_title","title","to","state","from","API_KEY","BASE_URL","getTrendingMoviesDay","fetch","response","ok","json","data","results","Promise","reject","Error","status","getInfoOfMovieById","movieId","getCreditsOfMovieById","cast","getReviewsOfMovieById","searchQuery"],"sourceRoot":""}